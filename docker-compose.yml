services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: credora-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: credora
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - credora-network
  
  server:
    build: .
    container_name: credora-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/credora?authSource=admin
      LOG_LEVEL: INFO
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_DB: 0
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - credora-network
    volumes:
      - ./logs:/app/logs

  redis:
    image: redis:7-alpine
    container_name: credora-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - credora-network
    volumes:
      - redis_data:/data

  # IPFS Kubo Node
  kubo:
    image: ipfs/kubo:latest
    container_name: credora-ipfs
    restart: unless-stopped
    ports:
      - "4001:4001"     # Swarm TCP port
      - "4001:4001/udp" # Swarm UDP port
      - "5001:5001"     # API port
      - "8080:8080"     # Gateway port
    environment:
      - IPFS_PROFILE=server
      - IPFS_PATH=/data/ipfs
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_staging:/export
    networks:
      - credora-network
    command: >
      sh -c "ipfs init --profile=server &&
             ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]' &&
             ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"GET\", \"POST\", \"PUT\", \"DELETE\"]' &&
             ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '[\"Authorization\", \"Content-Type\"]' &&
             ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001 &&
             ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080 &&
             ipfs daemon --migrate=true --agent-version-suffix=docker"

volumes:
  mongodb_data:
  redis_data:
  ipfs_data:
  ipfs_staging:

networks:
  credora-network:
    driver: bridge
